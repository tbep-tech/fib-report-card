---
title: "Enterococcus Report Card Process"
format: html
message: false
warning: false
error: true
---

# Load things  

## Packages, spatial layers, etc.  

```{r}
library(tidyverse)
library(sf)
library(mapview)
library(tbeptools)

dbasins <- read_sf(here::here("data", "geospatial", "dbasins-galb.shp"))
catchments <- read_sf(here::here("data", "geospatial", "TB_Select_Fib_Catchments_Dissolved.shp"))
swfwmd_pixels <- read_sf(here::here("data", "geospatial", "swfwmd_pixel_2_utm_m_83.shp"))
```



## Source functions  

These will eventually be incorporated into tbeptools; for now sourcing the .R files

```{r}
# to download Entero data at specified stations
source(here::here("R", "read_importwqpStationsAndStuff.R"))

# to download precip data from SWFWMD
source(here::here("R", "raindl.R"))

# to identify wet/dry fib samples  
source(here::here("R", "anlz_fibwetdry.R"))

source(here::here("R", "anlz_enteromatrix.R"))
source(here::here("R", "show_enteromatrix.R"))

source(here::here("R", "anlz_enteromap.R"))
# source(here::here("R", "show_enteromap.R"))
```



# Download things  


## Enterococcus data  

```{r}
stns <- unique(catch_pixels$station)
stns[which(stns == "21FLCOSP_WQX-CENTRAL *")] <- "21FLCOSP_WQX-CENTRAL CANAL"
# define arguments


stations <- stns  # can subset if desired
entero_names <- c("Enterococci",
                  "Enterococcus")
startDate <- as.Date("2010-01-01")
endDate <- as.Date("2022-12-31")
```

```{r}
# put them together
# date format has to be mm-dd-yyyy for the url
args <- list(
    siteid = stations,
    characteristicName = entero_names,
    startDateLo = format(startDate, "%m-%d-%Y"),
    startDateHi = format(endDate, "%m-%d-%Y")
)
```

```{r}
# grab the data
fibdat <- read_importwqpStationsAndStuff(args = args)

# fibdat2 <- read_importwqpStationsAndStuff(args = args)

fibdat$date <- lubridate::ymd(fibdat$date)
```

```{r}
#| eval: false

fibdat2 <- fibdat |> 
    mutate(year = lubridate::year(date))
table(fibdat2$station, fibdat2$year)
```


## Precip data  

Actually need to loop through some years  

```{r}
# yrs <- 2018:2022
# 
# prcp_out <- list()
# 
# for(i in seq_along(yrs)){
#     yr = yrs[i]
#     prcptmp <- read_importrain(curyr = yr, catch_pixels = catch_pixels,
#                            quiet = FALSE)
#     prcp_out[[i]] <- prcptmp
# }
# 
# prcpdat <- bind_rows(prcp_out)
# 
# save(prcpdat, file = here::here("data", "precipitation", "daily_rain_stns_2018-2022.RData"))
load(here::here("data", "precipitation", "daily_rain_stns_2018-2022.RData"))
```

Fix Central Canal in the precip data station listing, so it will match the station in the fib data.  

```{r}
prcpdat <- prcpdat |> 
    mutate(station = case_when(station == "21FLCOSP_WQX-CENTRAL *" ~ "21FLCOSP_WQX-CENTRAL CANAL",
                               .default = station))
```





# Link things  

Entero data to precip data; identify wet/dry samples  

```{r}
tmpthrs <- 3
wetthrs <- .5

# define 'wet' sample as 1 inch over 2 days
test1 <- anlz_fibwetdry(fibdat, prcpdat, 
                        temporal_window = tmpthrs, 
                        wet_threshold = wetthrs)
# number of wet samples:
sum(test1$wet_sample, na.rm = TRUE)
# proportion of samples that are wet:
(prop_wet <- sum(test1$wet_sample, na.rm = TRUE)/nrow(test1))
pct_wet <- round(prop_wet*100, 1)
nsamps <- nrow(test1)
nstns <- length(unique(test1$station))

ggplot(test1, aes(x = wet_sample,
                  y = ecocci)) +
    geom_boxplot() +
    scale_y_log10() +
    labs(subtitle = glue::glue("\n{pct_wet}% of {nsamps} samples across {nstns} stations 'wet' \n'wet' threshold {wetthrs} inches over {tmpthrs} days"))


ggplot(test1, aes(x = wet_sample,
                  y = rain_total)) +
    geom_boxplot() +
    scale_y_log10() +
    labs(subtitle = glue::glue("'wet' threshold {wetthrs} inches over {tmpthrs} days"))

ggplot(test1, aes(x = wet_sample,
                  y = rain_total)) +
    geom_boxplot() +
    labs(subtitle = glue::glue("'wet' threshold {wetthrs} inches over {tmpthrs} days"))
```



```{r}
# define 'wet' sample as 0.5 inches in 1 day
test2 <- anlz_fibwetdry(fibdat, prcpdat, 
                        temporal_window = 1, 
                        wet_threshold = 0.2)
# number of wet samples:
sum(test2$wet_sample)
# proportion of samples that are wet:
sum(test2$wet_sample)/nrow(test2)
```


# Calculate Report Card Metrics  


```{r}
fibdat <- fibdat |> 
    mutate(yr = lubridate::year(date),
           mo = lubridate::month(date))
```

make it like epchc data to see if it will work in anlz_fibmatrix  - pretend it's fecal coliform

```{r}
fake_fib <- fibdat |> 
    rename(epchc_station = station,
           fcolif = ecocci)
anlz_fibmatrix(fake_fib)
show_fibmatrix(fake_fib, stas = unique(fake_fib$epchc_station),
               yrrng = c(2018, 2022),
               lagyr = 1)
# not pretty, but it does work
```




`anlz_fibmap()`  - categorize based on thresholds  

`anlz_fibmatrix()`  

```{r}
anlz_enteromatrix(fibdat, lagyr = 1)
show_enteromatrix(fibdat, lagyr = 1)

anlz_enteromap(fibdat)
# need to get lat and long associated with the fibdat data frame
# before this will work - make a tbeptools object??
```



# Generate Report Card tables/graphics  

`show_fibmatrix()`  

`show_thrplot()`  

`show_boxplot()`  





